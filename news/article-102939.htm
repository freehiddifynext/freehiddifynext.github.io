<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freehiddifynext.github.io/news/article-102939.htm" />
    <title>Spring-Data-Redis 2.X以上版本使用心得和一些坑</title>
        <meta name="description" content="  最近在修改之前旧项目的时候，将spring-data-redis的版本升级到了2.X以上，查看了官方的文档之后，发现新版本有一些新特性和新的使用方法，这里记录整理一下，并附上自己在使用的时候遇到的" />
        <link rel="icon" href="/assets/website/img/freehiddifynext/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeHiddifyNext节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freehiddifynext.github.io/news/article-102939.htm" />
    <meta property="og:site_name" content="FreeHiddifyNext节点订阅站" />
    <meta property="og:title" content="Spring-Data-Redis 2.X以上版本使用心得和一些坑" />
    <meta property="og:image" content="https://freehiddifynext.github.io/uploads/20240414/cb71a93d66a1e00e760668da66da89c5.webp" />
        <meta property="og:release_date" content="2025-04-24T09:16:36" />
    <meta property="og:updated_time" content="2025-04-24T09:16:36" />
        <meta property="og:description" content="  最近在修改之前旧项目的时候，将spring-data-redis的版本升级到了2.X以上，查看了官方的文档之后，发现新版本有一些新特性和新的使用方法，这里记录整理一下，并附上自己在使用的时候遇到的" />
        
    <!--meta tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script>
        addEventListener("load", function () {
        setTimeout(hideURLbar, 0);
      }, false);
      
      function hideURLbar() {
        window.scrollTo(0, 1);
      }
    </script>
    <!--//meta tags ends here-->

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring-Data-Redis 2.X以上版本使用心得和一些坑">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!--booststrap-->
    <link href="/assets/website/css/freehiddifynext/bootstrap.min.css" rel="stylesheet" type="text/css" media="all">
    <!--//booststrap end-->
    <!-- font-awesome icons -->
    <link href="/assets/website/css/freehiddifynext/font-awesome.min.css" rel="stylesheet">
    <!-- //font-awesome icons -->
    <!--stylesheets-->
    <link href="/assets/website/css/freehiddifynext/style.css" rel='stylesheet' type='text/css' media="all">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!--//stylesheets-->
    <link href="http://fonts.googleapis.com/css?family=Thasadith:400,700" rel="stylesheet">
    <link href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-N7EH3QDE4Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-N7EH3QDE4Q');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--headder-->
    <div class="header-outs inner_page-banner " id="home">
                <div class="headder-top">
            <!-- nav -->
            <nav>
                <div id="logo">
                    <a href="/">
                                        <span>Free Hiddify Next</span>
                                        </a>
                </div>
                <label for="drop" class="toggle">Menu</label>
                <input type="checkbox" id="drop">
                <ul class="menu mt-2">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
            </nav>
            <!-- //nav -->
        </div>
    </div>
    <!--//headder-->
    <!-- short -->
    <div class="using-border py-3">
        <div class="inner_breadcrumb  ml-4">
            <ul class="short_ls">
                <li>
                    <a href="/">首页</a>
                    <span>/</span>
                </li>
                <li>
                    <a href="/news/">新闻资讯</a>
                    <span>/</span>
                </li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //short-->
    <!-- about -->
    <section class="about py-lg-4 py-md-3 py-sm-3 py-3" id="about">
        <div class="container py-lg-5 py-md-4 py-sm-4 py-3">
            <div class="row">
                <div class="col-md-9">
                  <h1 class="title text-center mb-lg-5 mb-md-4 mb-sm-4 mb-3">Spring-Data-Redis 2.X以上版本使用心得和一些坑</h1>
                                  <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>  最近在修改之前旧项目的时候，将spring-data-redis的版本升级到了2.X以上，查看了官方的文档之后，发现新版本有一些新特性和新的使用方法，这里记录整理一下，并附上自己在使用的时候遇到的一点坑。spring-data-redis最新版官方文档</p> <h3>spring-redis.xml配置（spring整合spring-data-redis）</h3> <pre><code class="prism language-bash"><span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans"</span>        xmlns:xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span> xmlns:context<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/context"</span>        xsi:schemaLocation<span class="token operator">=</span><span class="token string">"http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd         http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context-3.2.xsd"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- Redis连接池的配置 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"jedisPoolConfig"</span> class<span class="token operator">=</span><span class="token string">"redis.clients.jedis.JedisPoolConfig"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 控制一个pool可以分配多少个jedis实例 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"maxTotal"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.pool.maxActive}</span>"</span> /<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 连接池中最多可空闲链接个数，这里取值20，表示即使没有用数据库链接依然保持20个空闲链接 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"maxIdle"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.pool.maxIdle}</span>"</span> /<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 最大等待时间，当没有可用连接时，连接池等待链接被归还的最大时间ms，超过时间就抛出异常 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"maxWaitMillis"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.pool.maxWait}</span>"</span> /<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 在获取连接的时候检查链接的有效性 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"testOnBorrow"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.pool.testOnBorrow}</span>"</span> /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 配置redis连接密码 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"redisPassword"</span> class<span class="token operator">=</span><span class="token string">"org.springframework.data.redis.connection.RedisPassword"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>constructor-arg name<span class="token operator">=</span><span class="token string">"thePassword"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.auth}</span>"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/constructor-arg<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- redis单机配置，地址等在这配置 2.0以上的新特性 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"redisStandaloneConfiguration"</span> class<span class="token operator">=</span><span class="token string">"org.springframework.data.redis.connection.RedisStandaloneConfiguration"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"hostName"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.hostname}</span>"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"port"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.port}</span>"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span> ref<span class="token operator">=</span><span class="token string">"redisPassword"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"database"</span> value<span class="token operator">=</span><span class="token string">"<span class="token variable">${redis.database}</span>"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>--配置jedis链接工厂 spring-data-redis2.0中        建议改为构造器传入一个RedisStandaloneConfiguration  单机                            RedisSentinelConfiguration  主从复制                            RedisClusterConfiguration  集群--<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"connectionFactory"</span> class<span class="token operator">=</span><span class="token string">"org.springframework.data.redis.connection.jedis.JedisConnectionFactory"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>constructor-arg name<span class="token operator">=</span><span class="token string">"standaloneConfig"</span> ref<span class="token operator">=</span><span class="token string">"redisStandaloneConfiguration"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/constructor-arg<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>--手动设置 key  与 value的序列化方式--<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 序列化器：能够把我们储存的key与value做序列化处理的对象，是一个类似于converter的工具。            可以实现传入的java对象-<span class="token operator">&gt;</span>redis可以识别的数据类型。 如：字符串。            默认的Serializer是StringRedisSerializer。            设定默认的序列化器是字符串序列化器，原因是redis可以存储的数据只有字符串和字节数组。            一般来说，我们代码中操作的数据对象都是java对象。            如果代码中，使用的数据载体就是字符串对象，那么使用Jackson2JsonRedisSerializer来做序列化器是否会有问题？            如果jackson插件的版本不合适，有错误隐患的话，可能将字符串数据转换为json字符串 -<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span>chars:<span class="token punctuation">[</span><span class="token punctuation">]</span>, bytes:<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>            使用StringRedisSerializer就没有这个问题。不处理字符串转换的。认为代码中操作的key和value都是字符串。         --<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 配置默认的序列化器 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- keySerializer、valueSerializer 配置Redis中的String类型key与value的序列化器 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- HashKeySerializer、HashValueSerializer 配置Redis中的Hash类型key与value的序列化器 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"keySerializer"</span> class<span class="token operator">=</span><span class="token string">"org.springframework.data.redis.serializer.StringRedisSerializer"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"valueSerializer"</span> class<span class="token operator">=</span><span class="token string">"org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>-- 配置jedis模板 --<span class="token operator">&gt;</span><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"redisTemplate"</span> class<span class="token operator">=</span><span class="token string">"org.springframework.data.redis.core.RedisTemplate"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"connectionFactory"</span> ref<span class="token operator">=</span><span class="token string">"connectionFactory"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"keySerializer"</span> ref<span class="token operator">=</span><span class="token string">"keySerializer"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"valueSerializer"</span> ref<span class="token operator">=</span><span class="token string">"valueSerializer"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"hashKeySerializer"</span> ref<span class="token operator">=</span><span class="token string">"keySerializer"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"hashValueSerializer"</span> ref<span class="token operator">=</span><span class="token string">"valueSerializer"</span>/<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/bean<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/beans<span class="token operator">&gt;</span></code></pre> <p>  这里首先有几点注意的地方：</p> <ol> <li>对redis.properties文件的扫描我放到了spring-dao.xml中载入，由于web.xml中加载了，数据是共享，这里属于SSM整合的知识了。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221117/bb984ae60fcf22eb8143de2b39eeaf0b.jpg" alt="Spring-Data-Redis 2.X以上版本使用心得和一些坑"><img decoding="async" src="http://img.555519.xyz/uploads/20221117/be1df31571cdfc845e8cac0acfb143ae.jpg" alt="Spring-Data-Redis 2.X以上版本使用心得和一些坑"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221117/62e734a3fa37a26e357b2b58bcc5e8eb.jpg" alt="Spring-Data-Redis 2.X以上版本使用心得和一些坑"><br /> 2.在这里我只配置了一个RedisTemplate用来操作redis，而且序列化器也只使用了一种String类型的，因为在后续的业务中，将使用Jackson来对list，set和hash等格式的数据进行处理，先转换成json，再转换成String，取的时候将String利用jackson封装成List等即可。</li> </ol> <h3>RedisUtil封装操作</h3> <p>  虽然RedisTemplate提供了很多操作的API，但毕竟只是API，这里将一些常用操作进行封装并加入logger日志记录，方便后面进行定位。</p> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ValueOperations<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment">/**  * 对SDR接口进行封装的工具类，来对redis进行操作  */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">RedisUtil</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span> Logger logger<span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> RedisTemplate<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span><span class="token comment">/**      * 缓存value      *      * @param key      * @param value      * @param time      * @return      */</span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">cacheValue</span><span class="token punctuation">(</span>String k<span class="token punctuation">,</span> String value<span class="token punctuation">,</span><span class="token keyword">long</span> time<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         String key<span class="token operator">=</span> k<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             ValueOperations<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">&gt;</span></span> valueOperations<span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             valueOperations<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>time<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 如果有设置超时时间的话</span>                 redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> time<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"缓存["</span><span class="token operator">+</span> key<span class="token operator">+</span><span class="token string">"]失败, value["</span><span class="token operator">+</span> value<span class="token operator">+</span><span class="token string">"] "</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 缓存value，没有设置超时时间      *      * @param k      * @param value      * @return      */</span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">cacheValue</span><span class="token punctuation">(</span>String k<span class="token punctuation">,</span> String value<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token function">cacheValue</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> value<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 判断缓存是否存在      *      * @param key      * @return      */</span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">containsKey</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"判断缓存是否存在时失败key["</span><span class="token operator">+</span> key<span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">,</span><span class="token string">"err["</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 根据key，获取缓存      *      * @param key      * @return      */</span><span class="token keyword">public</span> String<span class="token function">getValue</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             ValueOperations<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">&gt;</span></span> valueOperations<span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> valueOperations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取缓存时失败key["</span><span class="token operator">+</span> key<span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">,</span><span class="token string">"err["</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> null<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 移除缓存      *      * @param key      * @return      */</span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">removeValue</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"移除缓存时失败key["</span><span class="token operator">+</span> key<span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">,</span><span class="token string">"err["</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 根据前缀移除所有以传入前缀开头的key-value      *      * @param pattern      * @return      */</span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">removeKeys</span><span class="token punctuation">(</span>String pattern<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             Set<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> keySet<span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>pattern<span class="token operator">+</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>keySet<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"移除key["</span><span class="token operator">+</span> pattern<span class="token operator">+</span><span class="token string">"]前缀的缓存时失败"</span><span class="token punctuation">,</span><span class="token string">"err["</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h3>使用演示</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@Override</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>Area<span class="token punctuation">&gt;</span></span><span class="token function">getAreaLsit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         String key<span class="token operator">=</span> AREALISTKEY<span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>Area<span class="token punctuation">&gt;</span></span> areaList<span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token comment">// 将list转换成string，利用jackson</span>         ObjectMapper objectMapper<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>redisUtil<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 如果不存在这个缓存,就从数据库取</span>             areaList<span class="token operator">=</span> areaDao<span class="token punctuation">.</span><span class="token function">queryArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 转换成string缓存</span>             String jsonValue<span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 jsonValue<span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>areaList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Json转换失败"</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 由于开启了事务，这里需要抛异常来触发回滚</span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">AreaOperationException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 没有问题就缓存</span>             redisUtil<span class="token punctuation">.</span><span class="token function">cacheValue</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> jsonValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 如果缓存中存在</span>             String jsonValue<span class="token operator">=</span> redisUtil<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定义要将json转换成的类型</span>             JavaType javaType<span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">getTypeFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">constructParametricType</span><span class="token punctuation">(</span>ArrayList<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> Area<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 areaList<span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>jsonValue<span class="token punctuation">,</span> javaType<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Json转换失败"</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 由于开启了事务，这里需要抛异常来触发回滚</span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">AreaOperationException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> areaList<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h3>遇到的问题</h3> <p>1.首先遇到了一个版本不兼容的问题，一开始我用的版本如下<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221117/ccf0c379e87a17fde42fe4d3ba1a31b8.jpg" alt="Spring-Data-Redis 2.X以上版本使用心得和一些坑"><br />   但是这两个版本会报一个找不到类的异常</p> <pre><code class="prism language-java">NoClassDefFoundError<span class="token operator">:</span> redis<span class="token operator">/</span>clients<span class="token operator">/</span>jedis<span class="token operator">/</span>util<span class="token operator">/</span>Pool</code></pre> <p>但是jar包中其实是有这个类的，查询了之后认为是版本不兼容的问题，这里我选择将Spring-Data-Redis降级，改成2.1.9之后就可以正常工作了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221117/7b768e694166d38c6fb91cac0a72d1be.jpg" alt="Spring-Data-Redis 2.X以上版本使用心得和一些坑"></p> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-102139.htm">java高级用法之:在JNA中将本地方法映射到JAVA代码中</a></p>
                                        <p>下一个：<a href="/news/article-102940.htm">.NET混合开发解决方案WebView2的进程模型</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-87379.htm" title="flex卡片布局（随屏幕自适应）">flex卡片布局（随屏幕自适应）</a></li>
                        <li class="py-2"><a href="/news/article-83780.htm" title="开网店被骗了398要的回来吗（怎样开网店卖别人的东西）">开网店被骗了398要的回来吗（怎样开网店卖别人的东西）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-6-free-ssr-node.htm" title="3月6日22.5M/S|Hiddify-Next免费机场订阅每天更新订阅链接">3月6日22.5M/S|Hiddify-Next免费机场订阅每天更新订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-4-free-high-speed-nodes.htm" title="3月4日19.5M/S|Hiddify-Next免费机场订阅每天更新订阅链接">3月4日19.5M/S|Hiddify-Next免费机场订阅每天更新订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-8-free-v2ray.htm" title="4月8日19M/S|Hiddify-Next免费机场订阅每天更新订阅链接">4月8日19M/S|Hiddify-Next免费机场订阅每天更新订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-24-free-shadowrocket-node.htm" title="3月24日20.7M/S|Hiddify-Next免费机场订阅每天更新订阅链接">3月24日20.7M/S|Hiddify-Next免费机场订阅每天更新订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-clash-node.htm" title="3月11日21.7M/S|Hiddify-Next免费机场订阅每天更新订阅链接">3月11日21.7M/S|Hiddify-Next免费机场订阅每天更新订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-78223.htm" title="猫不打疫苗有什么后果（猫不打疫苗危险吗）">猫不打疫苗有什么后果（猫不打疫苗危险吗）</a></li>
                        <li class="py-2"><a href="/news/article-80977.htm" title="领养狗狗需要什么手续（领养狗狗需要什么流程）">领养狗狗需要什么手续（领养狗狗需要什么流程）</a></li>
                        <li class="py-2"><a href="/news/article-66337.htm" title="专业养鱼咨询网（养鱼专家咨询）">专业养鱼咨询网（养鱼专家咨询）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">71</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </section>
    <!-- //about -->
    
    <!-- footer -->
<footer class="py-lg-4 py-md-3 py-sm-3 py-3">
    <div class="container py-lg-5 py-md-5 py-sm-4 py-3">
        <div class="bottem-wthree-footer text-center pt-md-4 pt-3">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                <a href="/">FreeHiddifyNext节点订阅站</a> 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
        <!-- move icon -->
        <div class="text-center">
            <a href="#home" class="move-top text-center mt-3"><i class="fa fa-arrow-up" aria-hidden="true"></i></a>
        </div>
        <!--//move icon -->
    </div>
</footer>
<!--//footer -->
<script src="/assets/website/js/frontend/freehiddifynext/jquery-1.11.1.min.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>